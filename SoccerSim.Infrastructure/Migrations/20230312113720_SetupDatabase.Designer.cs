// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoccerSim.Infrastructure;

#nullable disable

namespace SoccerSim.Infrastructure.Migrations
{
    [DbContext(typeof(SoccerSimContext))]
    [Migration("20230312113720_SetupDatabase")]
    partial class SetupDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("SoccerSim.Infrastructure.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Team1")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Team2")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Team3")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Team4")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SoccerSim.Infrastructure.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AwayScore")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AwayTeam")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Draw")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HomeScore")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("HomeTeam")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Winner")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("SoccerSim.Infrastructure.Models.Standing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Against")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Diff")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Draw")
                        .HasColumnType("INTEGER");

                    b.Property<int>("For")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Loss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Played")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Win")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Standings");
                });

            modelBuilder.Entity("SoccerSim.Infrastructure.Models.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Att")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Def")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("SoccerSim.Infrastructure.Models.Match", b =>
                {
                    b.HasOne("SoccerSim.Infrastructure.Models.Group", "Group")
                        .WithMany("Matches")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("SoccerSim.Infrastructure.Models.Standing", b =>
                {
                    b.HasOne("SoccerSim.Infrastructure.Models.Group", null)
                        .WithMany("Standings")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SoccerSim.Infrastructure.Models.Group", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("Standings");
                });
#pragma warning restore 612, 618
        }
    }
}
